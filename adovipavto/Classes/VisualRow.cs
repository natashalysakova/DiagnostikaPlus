using System;
using System.Data;
using System.Drawing;
using System.Windows.Forms;
using adovipavto.Properties;
using DRandomLib;

namespace adovipavto.Classes
{
    internal class VisualRow
    {
        private readonly double _maxval;
        private readonly double _minval;
        private Label _maxvluelabel;
        private Label _minvallable;
        private TextBox _textbox;

        public VisualRow(DataRow norma)
        {
            Id = (int) norma["Tag"];
            _minval = (double) norma["MinValue"];
            _maxval = (double) norma["MaxValue"];
        }

        public int Id { private set; get; }

        //public PictureBox PictureBox { get; set; }

        public double Value { get; set; }

        public TextBox TextBox
        {
            get { return _textbox; }
            set
            {
                _textbox = value;
                _textbox.Enabled = true;
                SetYellow();
                _textbox.Validated += TextBox_Validated;
                _textbox.TextChanged += textbox_TextChanged;

                if (Settings.Default.AutoGeneratedData)
                    _textbox.Text =
                        Math.Round(new DRandom().NextDouble(_minval, _maxval), new Normatives().DecimalPoints[Id])
                            .ToString();
            }
        }

        public Label MinLabel
        {
            get { return _minvallable; }
            set
            {
                _minvallable = value;
                _minvallable.Text = _minval.ToString();
            }
        }

        public Label MaxLabel
        {
            get { return _maxvluelabel; }
            set
            {
                _maxvluelabel = value;
                _maxvluelabel.Text = _maxval.ToString();
            }
        }

        private void textbox_TextChanged(object sender, EventArgs e)
        {
            double value;
            bool val = double.TryParse(_textbox.Text, out value);

            if (val)
            {
                Value = value;
                if (_minval <= Value && Value < _maxval)
                    SetGreen();
                else
                    SetRed();
            }
            else
            {
                if (_textbox.Text == "")
                {
                    SetYellow();
                    Value = 0;
                }
                else
                {
                    SetRed();
                }
            }
        }

        private void TextBox_Validated(object sender, EventArgs e)
        {
        }


        public void SetMinMax()
        {
            _minvallable.Text = _minval.ToString();
            _maxvluelabel.Text = _maxval.ToString();
        }

        private void SetRed()
        {
            //picxtireBox.Image = Properties.Resources.red;
            _textbox.BackColor = Color.LightPink;
        }

        private void SetGreen()
        {
            //picxtireBox.Image = Properties.Resources.green;
            _textbox.BackColor = Color.LightGreen;
        }


        private void SetYellow()
        {
            //picxtireBox.Image = Properties.Resources.yellow;
            _textbox.BackColor = Color.LightGoldenrodYellow;
        }

        public bool IsValid()
        {
            if (_textbox.BackColor == Color.LightGreen)
                return true;
            return false;
        }

        public bool Requred()
        {
            if (_textbox.BackColor == Color.LightGoldenrodYellow)
                return true;
            return false;
        }
    }
}